# Goal
# Verify build works
# Verify tests pass
# Verify it can be installed via pipx
# Verify it can be installed via uv
# Verify it runs via pipx command
# Verify it runs via uv command

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 54322:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -e ".[dev]"

      - name: Run tests
        run: |
          pytest tests/ -v
        env:
          SUPABASE_PROJECT_REF: "127.0.0.1:54322"
          SUPABASE_DB_PASSWORD: "postgres"

  package-test:
    name: Test Package Installation
    runs-on: ubuntu-latest
    needs: test
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        installer: ["uv", "pipx"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ${{ matrix.installer }}
        run: |
          python -m pip install --upgrade pip
          if [ "${{ matrix.installer }}" = "uv" ]; then
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          else
            python -m pip install pipx
          fi

      - name: Build package
        run: |
          python -m pip install build
          python -m build

      - name: Install via ${{ matrix.installer }}
        run: |
          if [ "${{ matrix.installer }}" = "uv" ]; then
            uv pip install dist/*.whl
          else
            pipx install dist/*.whl
          fi

      - name: Verify command works
        run: |
          if [ "${{ matrix.installer }}" = "uv" ]; then
            uv run supabase-mcp-server --help
          else
            supabase-mcp-server --help
          fi
